// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 75 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0xe2, 0x4c,
	0x29, 0xc9, 0x87, 0x70, 0x8d, 0xf8, 0xb8, 0x78, 0x02, 0x32, 0xd3, 0xd3, 0x2b, 0x83, 0x21, 0x8a,
	0x9c, 0xd8, 0x16, 0x31, 0x31, 0x07, 0xb8, 0x47, 0x26, 0xb1, 0x81, 0xa5, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x54, 0xd4, 0x06, 0x63, 0x3e, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PiggyServiceClient is the client API for PiggyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PiggyServiceClient interface {
}

type piggyServiceClient struct {
	cc *grpc.ClientConn
}

func NewPiggyServiceClient(cc *grpc.ClientConn) PiggyServiceClient {
	return &piggyServiceClient{cc}
}

// PiggyServiceServer is the server API for PiggyService service.
type PiggyServiceServer interface {
}

// UnimplementedPiggyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPiggyServiceServer struct {
}

func RegisterPiggyServiceServer(s *grpc.Server, srv PiggyServiceServer) {
	s.RegisterService(&_PiggyService_serviceDesc, srv)
}

var _PiggyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PiggyService",
	HandlerType: (*PiggyServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "service.proto",
}
